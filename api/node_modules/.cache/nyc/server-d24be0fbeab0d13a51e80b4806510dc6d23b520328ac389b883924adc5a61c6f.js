function cov_3ydeex10c(){var path="/home/adrian/Work/NodeJsTutorials/TDD/nesm/server.js";var hash="0091a362fe0bd4f45677970c35eaf020d76f0e94";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/adrian/Work/NodeJsTutorials/TDD/nesm/server.js",statementMap:{"0":{start:{line:2,column:16},end:{line:2,column:34}},"1":{start:{line:4,column:13},end:{line:4,column:28}},"2":{start:{line:5,column:12},end:{line:5,column:35}},"3":{start:{line:6,column:14},end:{line:6,column:57}},"4":{start:{line:8,column:17},end:{line:8,column:36}},"5":{start:{line:9,column:20},end:{line:9,column:43}},"6":{start:{line:11,column:17},end:{line:11,column:39}},"7":{start:{line:12,column:18},end:{line:12,column:38}},"8":{start:{line:14,column:17},end:{line:14,column:19}},"9":{start:{line:15,column:0},end:{line:15,column:69}},"10":{start:{line:16,column:0},end:{line:16,column:34}},"11":{start:{line:19,column:15},end:{line:28,column:2}},"12":{start:{line:20,column:4},end:{line:20,column:49}},"13":{start:{line:21,column:15},end:{line:21,column:52}},"14":{start:{line:23,column:4},end:{line:27,column:5}},"15":{start:{line:24,column:8},end:{line:24,column:25}},"16":{start:{line:26,column:8},end:{line:26,column:26}},"17":{start:{line:30,column:0},end:{line:30,column:23}},"18":{start:{line:32,column:12},end:{line:32,column:21}},"19":{start:{line:34,column:18},end:{line:36,column:1}},"20":{start:{line:37,column:0},end:{line:37,column:31}},"21":{start:{line:40,column:0},end:{line:40,column:27}},"22":{start:{line:43,column:0},end:{line:43,column:24}},"23":{start:{line:46,column:0},end:{line:46,column:48}},"24":{start:{line:48,column:11},end:{line:48,column:30}},"25":{start:{line:50,column:0},end:{line:50,column:20}},"26":{start:{line:58,column:0},end:{line:63,column:3}},"27":{start:{line:59,column:31},end:{line:59,column:39}},"28":{start:{line:60,column:4},end:{line:62,column:6}},"29":{start:{line:61,column:8},end:{line:61,column:63}},"30":{start:{line:66,column:0},end:{line:83,column:3}},"31":{start:{line:67,column:31},end:{line:67,column:39}},"32":{start:{line:68,column:4},end:{line:82,column:5}},"33":{start:{line:69,column:19},end:{line:69,column:54}},"34":{start:{line:70,column:8},end:{line:72,column:9}},"35":{start:{line:71,column:12},end:{line:71,column:68}},"36":{start:{line:73,column:8},end:{line:81,column:9}},"37":{start:{line:76,column:26},end:{line:76,column:41}},"38":{start:{line:77,column:24},end:{line:77,column:65}},"39":{start:{line:78,column:12},end:{line:78,column:50}},"40":{start:{line:80,column:12},end:{line:80,column:67}},"41":{start:{line:84,column:0},end:{line:86,column:3}},"42":{start:{line:85,column:4},end:{line:85,column:82}},"43":{start:{line:87,column:0},end:{line:87,column:41}},"44":{start:{line:88,column:0},end:{line:88,column:37}},"45":{start:{line:89,column:0},end:{line:89,column:40}},"46":{start:{line:93,column:13},end:{line:93,column:37}},"47":{start:{line:95,column:0},end:{line:97,column:3}},"48":{start:{line:96,column:4},end:{line:96,column:54}},"49":{start:{line:99,column:0},end:{line:99,column:21}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:19,column:43},end:{line:19,column:44}},loc:{start:{line:19,column:72},end:{line:28,column:1}},line:19},"1":{name:"(anonymous_1)",decl:{start:{line:58,column:22},end:{line:58,column:23}},loc:{start:{line:58,column:48},end:{line:63,column:1}},line:58},"2":{name:"(anonymous_2)",decl:{start:{line:60,column:46},end:{line:60,column:47}},loc:{start:{line:61,column:8},end:{line:61,column:63}},line:61},"3":{name:"(anonymous_3)",decl:{start:{line:66,column:19},end:{line:66,column:20}},loc:{start:{line:66,column:51},end:{line:83,column:1}},line:66},"4":{name:"(anonymous_4)",decl:{start:{line:84,column:72},end:{line:84,column:73}},loc:{start:{line:84,column:92},end:{line:86,column:1}},line:84},"5":{name:"(anonymous_5)",decl:{start:{line:95,column:17},end:{line:95,column:18}},loc:{start:{line:95,column:23},end:{line:97,column:1}},line:95}},branchMap:{"0":{loc:{start:{line:23,column:4},end:{line:27,column:5}},type:"if",locations:[{start:{line:23,column:4},end:{line:27,column:5}},{start:{line:23,column:4},end:{line:27,column:5}}],line:23},"1":{loc:{start:{line:68,column:4},end:{line:82,column:5}},type:"if",locations:[{start:{line:68,column:4},end:{line:82,column:5}},{start:{line:68,column:4},end:{line:82,column:5}}],line:68},"2":{loc:{start:{line:68,column:8},end:{line:68,column:24}},type:"binary-expr",locations:[{start:{line:68,column:8},end:{line:68,column:12}},{start:{line:68,column:16},end:{line:68,column:24}}],line:68},"3":{loc:{start:{line:70,column:8},end:{line:72,column:9}},type:"if",locations:[{start:{line:70,column:8},end:{line:72,column:9}},{start:{line:70,column:8},end:{line:72,column:9}}],line:70},"4":{loc:{start:{line:73,column:8},end:{line:81,column:9}},type:"if",locations:[{start:{line:73,column:8},end:{line:81,column:9}},{start:{line:73,column:8},end:{line:81,column:9}}],line:73},"5":{loc:{start:{line:93,column:13},end:{line:93,column:37}},type:"binary-expr",locations:[{start:{line:93,column:13},end:{line:93,column:29}},{start:{line:93,column:33},end:{line:93,column:37}}],line:93}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"0091a362fe0bd4f45677970c35eaf020d76f0e94"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_3ydeex10c=function(){return actualCoverage;};}return actualCoverage;}cov_3ydeex10c();const express=(cov_3ydeex10c().s[0]++,require("express"));// const bodyParser = require("body-parser"); /* deprecated */
const cors=(cov_3ydeex10c().s[1]++,require("cors"));const jwt=(cov_3ydeex10c().s[2]++,require('jsonwebtoken'));const Users=(cov_3ydeex10c().s[3]++,require("./controllers/user.controller.js"));const passport=(cov_3ydeex10c().s[4]++,require('passport'));const passportJWT=(cov_3ydeex10c().s[5]++,require('passport-jwt'));let ExtractJwt=(cov_3ydeex10c().s[6]++,passportJWT.ExtractJwt);let JwtStrategy=(cov_3ydeex10c().s[7]++,passportJWT.Strategy);let jwtOptions=(cov_3ydeex10c().s[8]++,{});cov_3ydeex10c().s[9]++;jwtOptions.jwtFromRequest=ExtractJwt.fromAuthHeaderAsBearerToken();cov_3ydeex10c().s[10]++;jwtOptions.secretOrKey='wowwow';let strategy=(cov_3ydeex10c().s[11]++,new JwtStrategy(jwtOptions,function(jwt_payload,next){cov_3ydeex10c().f[0]++;cov_3ydeex10c().s[12]++;console.log('payload received',jwt_payload);let user=(cov_3ydeex10c().s[13]++,Users.getUser({id:jwt_payload.id}));cov_3ydeex10c().s[14]++;if(user){cov_3ydeex10c().b[0][0]++;cov_3ydeex10c().s[15]++;next(null,user);}else{cov_3ydeex10c().b[0][1]++;cov_3ydeex10c().s[16]++;next(null,false);}}));// use the strategy
cov_3ydeex10c().s[17]++;passport.use(strategy);const app=(cov_3ydeex10c().s[18]++,express());var corsOptions=(cov_3ydeex10c().s[19]++,{origin:"http://localhost:8081"});cov_3ydeex10c().s[20]++;app.use(passport.initialize());cov_3ydeex10c().s[21]++;app.use(cors(corsOptions));// parse requests of content-type - application/json
cov_3ydeex10c().s[22]++;app.use(express.json());/* bodyParser.json() is deprecated */ // parse requests of content-type - application/x-www-form-urlencoded
cov_3ydeex10c().s[23]++;app.use(express.urlencoded({extended:true}));/* bodyParser.urlencoded() is deprecated */const db=(cov_3ydeex10c().s[24]++,require("./models"));cov_3ydeex10c().s[25]++;db.sequelize.sync();// // drop the table if it already exists
// db.sequelize.sync({ force: true }).then(() => {
//   console.log("Drop and re-sync db.");
// });
// simple route
// register route
cov_3ydeex10c().s[26]++;app.post('/register',function(req,res,next){cov_3ydeex10c().f[1]++;const{name,password}=(cov_3ydeex10c().s[27]++,req.body);cov_3ydeex10c().s[28]++;Users.createUser({name,password}).then(user=>{cov_3ydeex10c().f[2]++;cov_3ydeex10c().s[29]++;return res.json({user,msg:'account created successfully'});});});//login route
cov_3ydeex10c().s[30]++;app.post('/login',async function(req,res,next){cov_3ydeex10c().f[3]++;const{name,password}=(cov_3ydeex10c().s[31]++,req.body);cov_3ydeex10c().s[32]++;if((cov_3ydeex10c().b[2][0]++,name)&&(cov_3ydeex10c().b[2][1]++,password)){cov_3ydeex10c().b[1][0]++;let user=(cov_3ydeex10c().s[33]++,await Users.getUser({name:name}));cov_3ydeex10c().s[34]++;if(!user){cov_3ydeex10c().b[3][0]++;cov_3ydeex10c().s[35]++;res.status(401).json({message:'No such user found'});}else{cov_3ydeex10c().b[3][1]++;}cov_3ydeex10c().s[36]++;if(user.password===password){cov_3ydeex10c().b[4][0]++;// from now on we'll identify the user by the id and the id is the 
// only personalized value that goes into our token
let payload=(cov_3ydeex10c().s[37]++,{id:user.id});let token=(cov_3ydeex10c().s[38]++,jwt.sign(payload,jwtOptions.secretOrKey));cov_3ydeex10c().s[39]++;res.json({msg:'ok',token:token});}else{cov_3ydeex10c().b[4][1]++;cov_3ydeex10c().s[40]++;res.status(401).json({msg:'Password is incorrect'});}}else{cov_3ydeex10c().b[1][1]++;}});cov_3ydeex10c().s[41]++;app.get('/protected',passport.authenticate('jwt',{session:false}),function(req,res){cov_3ydeex10c().f[4]++;cov_3ydeex10c().s[42]++;res.json({msg:'Congrats! You are seeing this because you are authorized'});});cov_3ydeex10c().s[43]++;require("./routes/tutorial.routes")(app);cov_3ydeex10c().s[44]++;require("./routes/user.routes")(app);cov_3ydeex10c().s[45]++;require("./routes/comment.routes")(app);// set port, listen for requests
const PORT=(cov_3ydeex10c().s[46]++,(cov_3ydeex10c().b[5][0]++,process.env.PORT)||(cov_3ydeex10c().b[5][1]++,3000));//const PORT = process.env.NODE_ENV = "test"
cov_3ydeex10c().s[47]++;app.listen(PORT,()=>{cov_3ydeex10c().f[5]++;cov_3ydeex10c().s[48]++;console.log(`Server is running on port ${PORT}.`);});cov_3ydeex10c().s[49]++;module.exports=app;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,